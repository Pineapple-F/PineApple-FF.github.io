<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>单片机——蓝桥杯备赛</title>
      <link href="/2024/02/23/%E5%8D%95%E7%89%87%E6%9C%BA%E2%80%94%E2%80%94%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%A4%87%E8%B5%9B/"/>
      <url>/2024/02/23/%E5%8D%95%E7%89%87%E6%9C%BA%E2%80%94%E2%80%94%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%A4%87%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<p>蓝桥杯比赛指定单片机跟51单片机差不多，可以通过淘宝国信长天购买。</p><p>本次学习跟着<a href="https://www.bilibili.com/video/BV1Bt41187hw/?vd_source=59e4e13f0e1002ef3a96e7a6170a57aa">b站小蜜蜂老师的视频</a></p><p>使用的相关软件为 <code>keil4</code> 和 <code>STC-ISP</code></p><h1 id="相关软件使用"><a href="#相关软件使用" class="headerlink" title="相关软件使用"></a>相关软件使用</h1><p><code>keil4</code>作用是编写代码和编译</p><p><code>STC-ISP</code>的作用是将<code>keil4</code>得到的16进制码下载到我们的板子上</p><h2 id="keil4使用"><a href="#keil4使用" class="headerlink" title="keil4使用"></a>keil4使用</h2><ol><li>选一个位置存代码，新建文件夹</li><li>打开<code>keil4</code>，顶栏选择<code>Project</code>，再选择第一个<code>New Project</code>，找到刚才建的文件夹，自己写一个项目名，然后在<code>Atmel</code>中找到<code>AT89C52</code></li><li>新建c文件，保存在刚才建的项目文件夹中</li><li>在左侧项目栏中右键项目文件夹，找到<code>add</code>什么那个，然后把建的c文件加进去</li><li>改成16进制输出</li><li>写代码，编译</li></ol><h2 id="STC-ISP使用"><a href="#STC-ISP使用" class="headerlink" title="STC-ISP使用"></a>STC-ISP使用</h2><ol><li>点打开程序文件，打开要下载到板子上的.hex文件</li><li>点下载&#x2F;编程</li><li>按板子上的下载按钮完成下载</li></ol><hr><p>下面我们实现各个元件的控制</p><h1 id="各元件控制"><a href="#各元件控制" class="headerlink" title="各元件控制"></a>各元件控制</h1><h2 id="LED指示灯的控制"><a href="#LED指示灯的控制" class="headerlink" title="LED指示灯的控制"></a>LED指示灯的控制</h2><p>在蓝桥杯指定单片机上已经有了诸多外设，传感器等等，板子的内部电路固定。所以需要通过特定的电路来对电路原件做相应的控制，而不像大一的电子设计课一样需要自己连线，可以自己定每条线插在哪个口。</p><h3 id="LED电路"><a href="#LED电路" class="headerlink" title="LED电路"></a>LED电路</h3><p>板子上共有8个我们需要控制的LED，由一个三八译码器74HC138，一个锁存器74HC573，和或非门构成，而我们就需要通过改变这几个原件的输入输出从而控制LED亮灭，那我们一一来看一看电路图。</p><ul><li><strong>三八译码器（74HC138）</strong></li></ul><img src="/image/${fiilename}/ca6b90b2e3077bcbd1fb46538f3fa3b.png" alt="ca6b90b2e3077bcbd1fb46538f3fa3b" style="zoom:150%;" /><p>​简单的三八译码器，有三个输入控制对应的八个输出，符合二进制规律</p><p>​注意的是，该三八译码器八路输出中只有一路是Low，其他都是High</p><p>​P25, P26, P27连接HC138的 A, B, C输入端，分别对应二进制的第0位，第1位和第2位</p><p>​本次控制LED我们需要让Y4为Low，所以我们要让CBA为100时，此时二进制对应为4即Y4为Low，其余输出均为High</p><ul><li><strong>锁存器（74HC573）</strong></li></ul><p><img src="/image/$%7Bfiilename%7D/e2489def9312e404eaac29046a99369.png" alt="e2489def9312e404eaac29046a99369"></p><p>​有用的只有图中Y4C输入：</p><p>​Y4C为High，那么八个输出和八个输入保持一致（输出跟着输入随时变）</p><p>​Y4C为Low，那么八个输出并不改变（输出不跟着输入变，还是原来的输出值）</p><p>​那么Y4C是啥呢？如下：</p><img src="/image/${fiilename}/dbc69a7aff4b84f57d8a8c082498a4c.png" alt="dbc69a7aff4b84f57d8a8c082498a4c" style="zoom:200%;" /><p>​图有点糊，但没啥事</p><p>​WR一般都是0，Y4和Y4C相反</p><p>​所以在上面我们让CBA是100，Y4为Low，那么Y4C就是High，此时我们就可以顺利通过P0^1到8来控制八个小灯泡了，0为亮，1为灭，即P0 &#x3D; 0x00代表8个小灯泡全亮，P0 &#x3D; 0xff代表8个小灯泡全灭。</p><p>至此，有关LED的电路部分介绍完毕，我们开始进行代码的编写。</p><h3 id="LED代码"><a href="#LED代码" class="headerlink" title="LED代码"></a>LED代码</h3><p>整个51单片机编程使用的都是C语言，很好上手</p><ul><li><p>引入头文件</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br></pre></td></tr></table></figure></li></ul><p>​引入此头文件之后我们可以用特定字母代表指定引脚，比如P2^5代表电路图中的P25</p><ul><li><p>对应引脚定义</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sbit HC138_A = P2^<span class="number">5</span>;</span><br><span class="line">sbit HC138_B = P2^<span class="number">6</span>;</span><br><span class="line">sbit HC138_C = P2^<span class="number">7</span>;</span><br></pre></td></tr></table></figure></li><li><p>延迟函数</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>&#123;</span><br><span class="line"><span class="keyword">while</span>(t--);</span><br><span class="line"><span class="keyword">while</span>(t--);</span><br><span class="line"><span class="keyword">while</span>(t--);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>​每个延迟函数都这么写就行</p><ul><li><p><strong>LED控制函数</strong></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">LEDRunning</span><span class="params">()</span>&#123;   </span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> i;</span><br><span class="line"><span class="comment">//Y4 = 0</span></span><br><span class="line">HC138_C = <span class="number">1</span>;</span><br><span class="line">HC138_B = <span class="number">0</span>;</span><br><span class="line">HC138_A = <span class="number">0</span>;  </span><br><span class="line"></span><br><span class="line">    <span class="comment">//跑马灯</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">8</span>; i++)&#123;</span><br><span class="line">P0 = <span class="number">0xff</span> &lt;&lt; i;</span><br><span class="line">Delay(<span class="number">60000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">8</span>; i++)&#123;</span><br><span class="line">P0 = ~(<span class="number">0xff</span> &lt;&lt; i);</span><br><span class="line">Delay(<span class="number">60000</span>);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//8个LED整体闪三下</span></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)&#123;</span><br><span class="line">P0 = <span class="number">0x00</span>;</span><br><span class="line">Delay(<span class="number">60000</span>);</span><br><span class="line">P0 = <span class="number">0xff</span>;</span><br><span class="line">Delay(<span class="number">60000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>主函数</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">LEDRunning();</span><br><span class="line">&#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简简单单主函数，不断循环LED控制函数</p></li></ul><p>编写完代码下载到板子上，进行验证以及修改</p><p>至此，我们就可以顺利控制LED了</p><h2 id="继电器和蜂鸣器"><a href="#继电器和蜂鸣器" class="headerlink" title="继电器和蜂鸣器"></a>继电器和蜂鸣器</h2><h3 id="电路部分"><a href="#电路部分" class="headerlink" title="电路部分"></a>电路部分</h3><p><img src="/image/$%7Bfiilename%7D/055e11268c30d61c5937a455b638d2d.png" alt="055e11268c30d61c5937a455b638d2d"></p><p>如图，<code>N_RELAY</code>连的是继电器，<code>N_BUZZ</code>连的是蜂鸣器，相对应的输入分别是P04和P06，输入为High时工作。</p><p>和上面LED不同，与锁存器相连的是Y5C，所以要控制继电器和蜂鸣器，我们需要使74HC138的输出Y5为Low，其他输出为High，即CBA为101；</p><h3 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h3><ul><li><p>代码优化</p><p>由于本次涉及到了Y5C，我们可以写一个函数来决定HC138的输出</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">InitHC138</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> n)</span>&#123;</span><br><span class="line"><span class="keyword">switch</span>(n)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">HC138_C = <span class="number">1</span>;</span><br><span class="line">HC138_B = <span class="number">0</span>;</span><br><span class="line">HC138_A = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">HC138_C = <span class="number">1</span>;</span><br><span class="line">HC138_B = <span class="number">0</span>;</span><br><span class="line">HC138_A = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">HC138_C = <span class="number">1</span>;</span><br><span class="line">HC138_B = <span class="number">1</span>;</span><br><span class="line">HC138_A = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">HC138_C = <span class="number">1</span>;</span><br><span class="line">HC138_B = <span class="number">1</span>;</span><br><span class="line">HC138_A = <span class="number">1</span>; </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过这个函数，我们只需一个数字便可以得到我们想要的输出从而选择控制哪部分电路</p></li><li><p>控制继电器和蜂鸣器</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//继电器吸合</span></span><br><span class="line">InitHC138(<span class="number">5</span>);</span><br><span class="line">P0 = <span class="number">0x10</span>;</span><br><span class="line">Delay(<span class="number">60000</span>);</span><br><span class="line">P0 = <span class="number">0x00</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//蜂鸣器叫一下</span></span><br><span class="line">InitHC138(<span class="number">5</span>);</span><br><span class="line">P0 = <span class="number">0x40</span>;</span><br><span class="line">Delay(<span class="number">60000</span>);</span><br><span class="line">P0 = <span class="number">0x00</span>;</span><br></pre></td></tr></table></figure></li></ul><h2 id="共阳数码管"><a href="#共阳数码管" class="headerlink" title="共阳数码管"></a>共阳数码管</h2><h3 id="电路部分-1"><a href="#电路部分-1" class="headerlink" title="电路部分"></a>电路部分</h3><p><img src="/image/$%7Bfiilename%7D/image-20240225160400292.png" alt="image-20240225160400292"></p><p>如图，Y6C控制数码管位置，Y7C控制数码管内容</p><p>Y6C: P0^0-7与com0-7相连，控制8个数码管的明灭</p><p>Y7C: 每个数字或字母由组成数码管的8个LED决定，对应如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> SMG_duanma[<span class="number">18</span>] = &#123;<span class="number">0xc0</span>, <span class="number">0xf9</span>, <span class="number">0xa4</span>, <span class="number">0xb0</span>, <span class="number">0x99</span>,   <span class="number">0x92</span>, <span class="number">0x82</span>, <span class="number">0xf8</span>, <span class="number">0x80</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0xc6</span>, <span class="number">0xc0</span>, <span class="number">0x86</span>, <span class="number">0x8e</span>,</span><br><span class="line">    <span class="number">0xbf</span>, <span class="number">0x7f</span>&#125;;</span><br></pre></td></tr></table></figure><h3 id="静态显示"><a href="#静态显示" class="headerlink" title="静态显示"></a>静态显示</h3><p>由于控制数码管内容的只有P0^1-7，所以在静态显示中，如果有多个数码管同时亮，则显示的内容一致</p><ul><li><p>数码管位置及内容控制函数</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">ShowSMG_Bit</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dat, <span class="type">unsigned</span> pos)</span>&#123;</span><br><span class="line"> <span class="comment">//数码管位置</span></span><br><span class="line">InitHC138(<span class="number">6</span>);</span><br><span class="line">P0 = <span class="number">0x01</span> &lt;&lt; pos;</span><br><span class="line"><span class="comment">//数码管内容</span></span><br><span class="line">InitHC138(<span class="number">7</span>);</span><br><span class="line">P0 = SMG_duanma[dat]; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>8个数码管依次亮</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">SMG_Static</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)&#123;</span><br><span class="line"> ShowSMG_Bit(i,i);  </span><br><span class="line">Delay(<span class="number">50000</span>);</span><br><span class="line">Delay(<span class="number">50000</span>);</span><br><span class="line">Delay(<span class="number">50000</span>);</span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="动态显示"><a href="#动态显示" class="headerlink" title="动态显示"></a>动态显示</h3><p>动态显示是根据人眼的<strong>视觉暂留现象</strong>以及发光二极管的<strong>余晖效应</strong>，只要8个LED闪的够快，那么在看起来就是一直亮的。</p><p>动态显示可以大大节省I&#x2F;O端口，而且功耗低</p><ul><li><p>动态显示代码</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">SMG_Dynamic</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> j = <span class="number">0</span>;   </span><br><span class="line">ShowSMG_Bit(<span class="number">1</span>,<span class="number">1</span>);  </span><br><span class="line">Delay(<span class="number">500</span>);  </span><br><span class="line">    <span class="comment">//延迟也不能太短，LED点亮也需要时间，太短会让数码管看起来很暗</span></span><br><span class="line">ShowSMG_Bit(<span class="number">1</span>,<span class="number">1</span>);  </span><br><span class="line">Delay(<span class="number">500</span>); </span><br><span class="line">ShowSMG_Bit(<span class="number">2</span>,<span class="number">2</span>); </span><br><span class="line">Delay(<span class="number">500</span>);</span><br><span class="line">ShowSMG_Bit(<span class="number">3</span>,<span class="number">3</span>); </span><br><span class="line">Delay(<span class="number">500</span>);</span><br><span class="line">ShowSMG_Bit(<span class="number">4</span>,<span class="number">4</span>); </span><br><span class="line">Delay(<span class="number">500</span>);</span><br><span class="line">ShowSMG_Bit(<span class="number">5</span>,<span class="number">5</span>); </span><br><span class="line">Delay(<span class="number">500</span>);</span><br><span class="line">ShowSMG_Bit(<span class="number">6</span>,<span class="number">6</span>); </span><br><span class="line">Delay(<span class="number">500</span>);</span><br><span class="line">ShowSMG_Bit(<span class="number">7</span>,<span class="number">7</span>); </span><br><span class="line">Delay(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>动态显示的延迟函数</p><p>动态显示的延迟函数不能像之前的一样，而应该在延迟函数的<code>while</code>函数中一直进行动态显示</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Delay_Dynamic</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>&#123;</span><br><span class="line"> <span class="keyword">while</span>(t--)&#123;</span><br><span class="line"> SMG_Dynamic();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>主函数</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">SMG_Static();</span><br><span class="line">SMG_Dynamic();</span><br><span class="line">Delay_Dynamic(<span class="number">100</span>);   </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>​这样我们就可以随意控制8个数码管显示任何数字以及实现我们想要完成的变化了</p>]]></content>
      
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
